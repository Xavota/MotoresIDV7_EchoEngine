/************************************************************************/
/**
 * @file eeOctree.h
 * @author Diego Castellanos
 * @date 30/03/22
 * @brief
 * The Octree object, for world partition in roots with 8 nodes each.
 *
 * @bug Not bug Known.
 */
 /************************************************************************/

#pragma once
#include "eePrerequisitesCore.h"

#include <eeBox.h>

namespace eeEngineSDK {
/**
 * @brief
 * The Octree object, for world partition in roots with 8 nodes each.
 */
class EE_CORE_EXPORT Octree
{
 public:
  /**
   * @brief
   * Default constructor
   */
  Octree() = default;
  /**
   * @brief
   * Default destructor
   */
  ~Octree() = default;

  /**
   * @brief
   * Calculates the tree.
   *
   * @description
   * Initiate the tree calculation in the space and with the static meshes.
   *
   * @param space
   * The space the Octree will cover.
   * @param scenes
   * The scenes from where the Octree will take the meshes.
   */
  void
  calculateTree(const BoxAAB& space, const Vector<SPtr<Scene>>& scenes);

  /**
   * @brief
   * Getter for the meshes generated by the partition of the scenes.
   *
   * @description
   * Returns the meshes that where created by the partition of the scenes.
   *
   * @param meshesVec
   * The output vector of meshes.
   */
  void
  getMeshes(Vector<SPtr<StaticMesh>>& outMeshesVec);

 private:
  /**
   * The root of the tree.
   */
  SPtr<OctreeNode> m_root;
  /**
   * The space the Octree will cover.
   */
  BoxAAB m_treeSpace;
};
}
